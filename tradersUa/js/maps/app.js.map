{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["console.log('msg');\r\n// (function(d, s, id) {\r\n//   var js, fjs = d.getElementsByTagName(s)[0];\r\n//   if (d.getElementById(id)) return;\r\n//   js = d.createElement(s); js.id = id;\r\n//   js.src = \"https://connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.10&appId=1920488714856591\";\r\n//   fjs.parentNode.insertBefore(js, fjs);\r\n// }(document, 'script', 'facebook-jssdk'));\r\n\r\n\r\n// function myFacebookLogin() {\r\n//   FB.login(function(){}, {scope: 'publish_actions'});\r\n// }\r\n// window.fbAsyncInit = function() {\r\n//     FB.init({\r\n//       appId            : '145291699399937',\r\n//       autoLogAppEvents : true,\r\n//       xfbml            : true,\r\n//       version          : 'v2.10'\r\n//     });\r\n//     FB.AppEvents.logPageView();\r\n//     console.log(FB);\r\n  \r\n//   FB.getLoginStatus(function(response) {\r\n//     if (response.status === 'connected') {\r\n//       console.log('Logged in.');\r\n//       //codingeverybody/permalink/1802935303080331/?\r\n//     /* make the API call */\r\n//     FB.api(\r\n//         \"/1802935303080331\",\r\n//         function (response) {\r\n//           console.log(response);\r\n//           if (response && !response.error) {\r\n//             console.log(response);\r\n//           }\r\n//         }\r\n//     );\r\n//     }\r\n//     else {\r\n//       FB.login();\r\n//     }\r\n//   });\r\n    \r\n    \r\n//   };\r\n  \r\n//   (function(d, s, id){\r\n//      var js, fjs = d.getElementsByTagName(s)[0];\r\n//      if (d.getElementById(id)) {return;}\r\n//      js = d.createElement(s); js.id = id;\r\n//      js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n//      fjs.parentNode.insertBefore(js, fjs);\r\n//    }(document, 'script', 'facebook-jssdk'));\r\n    \r\n\r\n\r\n// This is called with the results from from FB.getLoginStatus().\r\nfunction statusChangeCallback(response) {\r\n  console.log('statusChangeCallback');\r\n  console.log(response);\r\n  // The response object is returned with a status field that lets the\r\n  // app know the current login status of the person.\r\n  // Full docs on the response object can be found in the documentation\r\n  // for FB.getLoginStatus().\r\n  if (response.status === 'connected') {\r\n    // Logged into your app and Facebook.\r\n    testAPI();\r\n  } else {\r\n    // The person is not logged into your app or we are unable to tell.\r\n    document.getElementById('status').innerHTML = 'Please log ' +\r\n      'into this app.';\r\n  }\r\n}\r\n\r\n// This function is called when someone finishes with the Login\r\n// Button.  See the onlogin handler attached to it in the sample\r\n// code below.\r\nfunction checkLoginState() {\r\n  FB.getLoginStatus(function(response) {\r\n    statusChangeCallback(response);\r\n  });\r\n}\r\n\r\nwindow.fbAsyncInit = function() {\r\nFB.init({\r\n  appId      : '{your-app-id}',\r\n  cookie     : true,  // enable cookies to allow the server to access \r\n                      // the session\r\n  xfbml      : true,  // parse social plugins on this page\r\n  version    : 'v2.8' // use graph api version 2.8\r\n});\r\n\r\n// Now that we've initialized the JavaScript SDK, we call \r\n// FB.getLoginStatus().  This function gets the state of the\r\n// person visiting this page and can return one of three states to\r\n// the callback you provide.  They can be:\r\n//\r\n// 1. Logged into your app ('connected')\r\n// 2. Logged into Facebook, but not your app ('not_authorized')\r\n// 3. Not logged into Facebook and can't tell if they are logged into\r\n//    your app or not.\r\n//\r\n// These three cases are handled in the callback function.\r\n\r\n// FB.getLoginStatus(function(response) {\r\n//   statusChangeCallback(response);\r\n// });\r\n\r\n// };\r\n\r\n// // Load the SDK asynchronously\r\n// (function(d, s, id) {\r\n//   var js, fjs = d.getElementsByTagName(s)[0];\r\n//   if (d.getElementById(id)) return;\r\n//   js = d.createElement(s); js.id = id;\r\n//   js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n//   fjs.parentNode.insertBefore(js, fjs);\r\n// }(document, 'script', 'facebook-jssdk'));\r\n\r\n// // Here we run a very simple test of the Graph API after login is\r\n// // successful.  See statusChangeCallback() for when this call is made.\r\n// function testAPI() {\r\n//   console.log('Welcome!  Fetching your information.... ');\r\n//   FB.api('/me', function(response) {\r\n//     console.log('Successful login for: ' + response.name);\r\n//     document.getElementById('status').innerHTML =\r\n//       'Thanks for logging in, ' + response.name + '!';\r\n//   });\r\n// }\r\n\r\n// This is called with the results from from FB.getLoginStatus().\r\nfunction statusChangeCallback(response) {\r\n  console.log('statusChangeCallback');\r\n  console.log(response);\r\n  // The response object is returned with a status field that lets the\r\n  // app know the current login status of the person.\r\n  // Full docs on the response object can be found in the documentation\r\n  // for FB.getLoginStatus().\r\n  if (response.status === 'connected') {\r\n    // Logged into your app and Facebook.\r\n    testAPI();\r\n  } else {\r\n    // The person is not logged into your app or we are unable to tell.\r\n    document.getElementById('status').innerHTML = 'Please log ' +\r\n      'into this app.';\r\n  }\r\n}\r\n\r\n// This function is called when someone finishes with the Login\r\n// Button.  See the onlogin handler attached to it in the sample\r\n// code below.\r\nfunction checkLoginState() {\r\n  FB.getLoginStatus(function(response) {\r\n    statusChangeCallback(response);\r\n  });\r\n}\r\n\r\nwindow.fbAsyncInit = function() {\r\nFB.init({\r\n  appId      : '{1920488714856591}',\r\n  cookie     : true,  // enable cookies to allow the server to access \r\n                      // the session\r\n  xfbml      : true,  // parse social plugins on this page\r\n  version    : 'v2.8' // use graph api version 2.8\r\n});\r\n\r\n// Now that we've initialized the JavaScript SDK, we call \r\n// FB.getLoginStatus().  This function gets the state of the\r\n// person visiting this page and can return one of three states to\r\n// the callback you provide.  They can be:\r\n//\r\n// 1. Logged into your app ('connected')\r\n// 2. Logged into Facebook, but not your app ('not_authorized')\r\n// 3. Not logged into Facebook and can't tell if they are logged into\r\n//    your app or not.\r\n//\r\n// These three cases are handled in the callback function.\r\n\r\nFB.getLoginStatus(function(response) {\r\n  statusChangeCallback(response);\r\n});\r\n\r\n};\r\n\r\n// Load the SDK asynchronously\r\n(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, 'script', 'facebook-jssdk'));\r\n\r\n// Here we run a very simple test of the Graph API after login is\r\n// successful.  See statusChangeCallback() for when this call is made.\r\nfunction testAPI() {\r\n  console.log('Welcome!  Fetching your information.... ');\r\n  FB.api('/me', function(response) {\r\n    console.log('Successful login for: ' + response.name);\r\n    document.getElementById('status').innerHTML =\r\n      'Thanks for logging in, ' + response.name + '!';\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\n// App ID\r\n// 1920488714856591\r\n\r\n// App Secret\r\n// df62e2b4a618e5743f48d61d3eed5739Reset\r\n\r\n// Display Name\r\n// tradersua app\r\n"],"file":"../app.js"}