{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["\r\nvar map;\r\nfunction initMap() {\r\n  map = new google.maps.Map(document.getElementById('map'), {\r\n    center: {lat: -34.397, lng: 150.644},\r\n    zoom: 8\r\n  });\r\n}\r\nvar color = Chart.helpers.color;\r\n  var scatterChartData = {\r\n    datasets: [{\r\n      label: \"My First dataset\",\r\n      xAxisID: \"x-axis-1\",\r\n      yAxisID: \"y-axis-1\",\r\n      borderColor: window.chartColors.red,\r\n      backgroundColor: color(window.chartColors.red).alpha(0.2).rgbString(),\r\n      data: [{\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }]\r\n    }, {\r\n      label: \"My Second dataset\",\r\n      xAxisID: \"x-axis-1\",\r\n      yAxisID: \"y-axis-2\",\r\n      borderColor: window.chartColors.blue,\r\n      backgroundColor: color(window.chartColors.blue).alpha(0.2).rgbString(),\r\n      data: [{\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }, {\r\n        x: randomScalingFactor(),\r\n        y: randomScalingFactor(),\r\n      }]\r\n    }]\r\n  };\r\n\r\n  window.onload = function() {\r\n    var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\r\n    window.myScatter = Chart.Scatter(ctx, {\r\n      data: scatterChartData,\r\n      options: {\r\n        responsive: true,\r\n        hoverMode: 'nearest',\r\n        intersect: true,\r\n        title: {\r\n          display: false,\r\n          // text: 'Chart.js Scatter Chart - Multi Axis'\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            position: \"bottom\",\r\n            gridLines: {\r\n              zeroLineColor: \"rgba(0,0,0,1)\"\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            type: \"linear\", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\r\n            display: true,\r\n            position: \"left\",\r\n            id: \"y-axis-1\",\r\n          }, {\r\n            type: \"linear\", // only linear but allow scale type registration. This allows extensions to exist solely for log scale for instance\r\n            display: true,\r\n            position: \"right\",\r\n            reverse: true,\r\n            id: \"y-axis-2\",\r\n\r\n            // grid line settings\r\n            gridLines: {\r\n              drawOnChartArea: false, // only want the grid lines for one axis to show up\r\n            },\r\n          }],\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  document.getElementById('randomizeData').addEventListener('click', function() {\r\n    scatterChartData.datasets.forEach(function(dataset) {\r\n      dataset.data = dataset.data.map(function() {\r\n        return {\r\n          x: randomScalingFactor(),\r\n          y: randomScalingFactor()\r\n        };\r\n      });\r\n    });\r\n    window.myScatter.update();\r\n  });"],"file":"../app.js"}